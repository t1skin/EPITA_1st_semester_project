"""
SQL queries.
"""


quary_1: str = '''
    SELECT s.STUDENT_POPULATION_CODE_REF, count(*) 
	FROM STUDENTS s
    WHERE s.STUDENT_POPULATION_YEAR_REF = 2021
    GROUP BY s.STUDENT_POPULATION_CODE_REF
    '''


quary_2: str = '''
    SELECT 
	    t1.STUDENT_POPULATION_CODE_REF, 
	    CAST(
            ROUND(CAST(t2.count_present AS FLOAT) / CAST(t1.count_all AS FLOAT), 2) * 100 
        AS INT)

    FROM (
	    SELECT 
	        STUDENT_POPULATION_CODE_REF, COUNT(*) AS count_all
	    FROM (
	        SELECT s.STUDENT_POPULATION_CODE_REF, a.ATTENDANCE_PRESENCE 
	        FROM STUDENTS s
	        RIGHT JOIN ATTENDANCE a ON s.STUDENT_EPITA_EMAIL = a.ATTENDANCE_STUDENT_REF   
	        WHERE s.STUDENT_POPULATION_YEAR_REF = 2021
	    )
	    GROUP BY STUDENT_POPULATION_CODE_REF
    ) AS t1

    LEFT JOIN (
	    SELECT 
	        STUDENT_POPULATION_CODE_REF, COUNT(*) AS count_present
	    FROM (
		    SELECT s.STUDENT_POPULATION_CODE_REF, a.ATTENDANCE_PRESENCE 
		    FROM STUDENTS s
		    RIGHT JOIN ATTENDANCE a ON s.STUDENT_EPITA_EMAIL = a.ATTENDANCE_STUDENT_REF   
		    WHERE s.STUDENT_POPULATION_YEAR_REF = 2021 AND a.ATTENDANCE_PRESENCE = 1
	    )
	    GROUP BY STUDENT_POPULATION_CODE_REF
    ) AS t2
    ON t1.STUDENT_POPULATION_CODE_REF = t2.STUDENT_POPULATION_CODE_REF;
    '''    


def quary_3(program: str) -> str:
	return '''
		SELECT 
			STUDENT_CONTACT_REF, 
			CONTACT_FIRST_NAME, 
			CONTACT_LAST_NAME, 
			NUMBER_OF_COURSES,
			COUNT(*) AS PASSED

		FROM (
			SELECT
			s.STUDENT_CONTACT_REF, 
			c.CONTACT_FIRST_NAME, 
			c.CONTACT_LAST_NAME, 
			NUMBER_OF_COURSES,
			ROUND(
				CAST(SUM(g.GRADE_SCORE * e.EXAM_WEIGHT) AS FLOAT) / SUM (e.EXAM_WEIGHT)
			, 2) AS MARK

			FROM 
			STUDENTS s 
			INNER JOIN CONTACTS c ON s.STUDENT_CONTACT_REF = c.CONTACT_EMAIL 
			INNER JOIN GRADES g ON g.GRADE_STUDENT_EPITA_EMAIL_REF = s.STUDENT_EPITA_EMAIL 	
			INNER JOIN EXAMS e ON e.EXAM_COURSE_CODE = g.GRADE_COURSE_CODE_REF AND e.EXAM_TYPE = g.GRADE_EXAM_TYPE_REF
			INNER JOIN (
				SELECT p.PROGRAM_ASSIGNMENT, COUNT(*) AS NUMBER_OF_COURSES
				FROM PROGRAMS p 
				WHERE PROGRAM_ASSIGNMENT = '{program}'
				GROUP BY p.PROGRAM_ASSIGNMENT 
			) ON s.STUDENT_POPULATION_CODE_REF = PROGRAM_ASSIGNMENT

			WHERE 
			s.STUDENT_POPULATION_CODE_REF = '{program}' 
			AND s.STUDENT_POPULATION_YEAR_REF = 2021

			GROUP BY 
			s.STUDENT_CONTACT_REF,  
			e.EXAM_COURSE_CODE
		)

		WHERE MARK >= 10
		GROUP BY STUDENT_CONTACT_REF
	'''.format(program=program)


def quary_4(program: str) -> str:
	return ''' 
		SELECT c.COURSE_NAME, COUNT(*)

		FROM 
		PROGRAMS p
		INNER JOIN SESSIONS s ON p.PROGRAM_COURSE_CODE_REF = s.SESSION_COURSE_REF 
		INNER JOIN COURSES c ON p.PROGRAM_COURSE_CODE_REF = c.COURSE_CODE 

		WHERE 
		p.PROGRAM_ASSIGNMENT = '{program}'

		GROUP BY 
		c.COURSE_NAME
	'''.format(program=program)


def quary_5(program: str, course: str) -> str:
	return '''
		SELECT
		s.STUDENT_CONTACT_REF, 
		c.CONTACT_FIRST_NAME, 
		c.CONTACT_LAST_NAME, 
		ROUND(
	  	CAST(SUM(g.GRADE_SCORE * e.EXAM_WEIGHT) AS FLOAT) / SUM (e.EXAM_WEIGHT)
		, 2) AS MARK 

		FROM 
		STUDENTS s 
		INNER JOIN CONTACTS c ON s.STUDENT_CONTACT_REF = c.CONTACT_EMAIL 
		INNER JOIN GRADES g ON g.GRADE_STUDENT_EPITA_EMAIL_REF = s.STUDENT_EPITA_EMAIL 	
		INNER JOIN EXAMS e ON e.EXAM_COURSE_CODE = g.GRADE_COURSE_CODE_REF AND e.EXAM_TYPE = g.GRADE_EXAM_TYPE_REF
		INNER JOIN COURSES c2 ON c2.COURSE_CODE = e.EXAM_COURSE_CODE

		WHERE 
	  	s.STUDENT_POPULATION_CODE_REF = '{program}' 
	  	AND s.STUDENT_POPULATION_YEAR_REF = 2021
	  	AND c2.COURSE_NAME = '{course}'

		GROUP BY 
	  	s.STUDENT_CONTACT_REF,  
	  	e.EXAM_COURSE_CODE
	'''.format(program=program, course=course)


def quary_6(program: str, student: str) -> str:
	return '''
		SELECT
		s.STUDENT_CONTACT_REF, 
		c2.COURSE_NAME, 
		ROUND(
			CAST(SUM(g.GRADE_SCORE * e.EXAM_WEIGHT) AS FLOAT) / SUM (e.EXAM_WEIGHT)
		, 2) AS MARK

		FROM 
		STUDENTS s 
		INNER JOIN CONTACTS c ON s.STUDENT_CONTACT_REF = c.CONTACT_EMAIL 
		INNER JOIN GRADES g ON g.GRADE_STUDENT_EPITA_EMAIL_REF = s.STUDENT_EPITA_EMAIL 	
		INNER JOIN EXAMS e ON e.EXAM_COURSE_CODE = g.GRADE_COURSE_CODE_REF AND e.EXAM_TYPE = g.GRADE_EXAM_TYPE_REF
		INNER JOIN COURSES c2 ON c2.COURSE_CODE = e.EXAM_COURSE_CODE

		WHERE 
		CONCAT(c.CONTACT_FIRST_NAME, ' ', c.CONTACT_LAST_NAME) = '{student}'
		AND s.STUDENT_POPULATION_CODE_REF = '{program}'

		GROUP BY 
		e.EXAM_COURSE_CODE
	'''.format(program=program, student=student)